version: 0.2

phases:
  install:
    commands:
      - echo Installing Terraform...
      - wget https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip
      - unzip terraform_1.9.5_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform --version
      - echo Installing jq...
      - apt-get update && apt-get install -y jq

  pre_build:
    commands:
      - echo "CUSTOMER_ACCOUNT_ID is ${CUSTOMER_ACCOUNT_ID}"
      - echo "CUSTOMER_ACCOUNT_ROLE_NAME is ${CUSTOMER_ACCOUNT_ROLE_NAME}"
      - echo "S3_BUCKET_NAME is ${S3_BUCKET_NAME}"
      - echo "DYNAMODB_TABLE_NAME is ${DYNAMODB_TABLE_NAME}"
      - echo "S3_STATE_FILE is ${S3_STATE_FILE}"
      - echo "Changing directory to ${MODULE_PATH}..."
      - cd ${MODULE_PATH}
      - echo "Updating backend configuration..."
      - |
        cat > backend.tf <<EOF
        terraform {
          backend "s3" {
            bucket         = "${S3_BUCKET_NAME}"
            key            = "${S3_STATE_FILE}"
            region         = "${AWS_REGION}"
            dynamodb_table = "${DYNAMODB_TABLE_NAME}"
          }
        }
        EOF
      - echo "Contents of backend.tf:"
      - cat backend.tf
      - echo "Updating provider configuration..."
      - |
        cat > provider.tf <<EOF
        provider "aws" {
          region = "${AWS_REGION}"

          assume_role {
            role_arn     = "arn:aws:iam::$CUSTOMER_ACCOUNT_ID:role/$CUSTOMER_ACCOUNT_ROLE_NAME"
            session_name = "terraform-session-account2"
          }
        }
        EOF
      - echo "Contents of provider.tf:"
      - cat provider.tf
      - echo "Initializing Terraform..."
      - terraform init

  build:
    commands:
      - |
        if [ -z "$CUSTOMER_ACCOUNT_ID" ]; then echo "CUSTOMER_ACCOUNT_ID is not set. Exiting." && exit 1; fi
        if [ -z "$CUSTOMER_ACCOUNT_ROLE_NAME" ]; then echo "CUSTOMER_ACCOUNT_ROLE_NAME is not set. Exiting." && exit 1; fi
      - echo "Planning Terraform deployment..."
      - terraform plan -out=tfplan

  post_build:
    commands:
      - echo "Applying Terraform deployment..."
      - terraform apply -auto-approve tfplan
      - echo "Terraform apply completed on `date`"

artifacts:
  files:
    - '**/*'
  discard-paths: yes
  base-directory: .
